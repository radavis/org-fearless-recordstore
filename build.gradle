plugins {
    id 'com.diffplug.gradle.spotless' version "${spotlessVersion}"
    id 'org.flywaydb.flyway' version "${flywayVersion}"
    id 'org.springframework.boot' version "${springVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'java'
    id 'jacoco'
}

group = 'org.fearless'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.flywaydb:flyway-core:${flywayVersion}"
    compileOnly 'org.projectlombok:lombok'
    compile 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

flyway {
    url = System.getenv('SPRING_DATASOURCE_URL')
    user = System.getenv('SPRING_DATASOURCE_USERNAME')
    password = System.getenv('SPRING_DATASOURCE_PASSWORD')
}

test {
    useJUnitPlatform()

    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
        // showStandardStreams = true
    }
}

jacoco {
    toolVersion = "${jacocoVersion}"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled true
    }
}

spotless {
    java {
        googleJavaFormat()
        removeUnusedImports()
    }
}
